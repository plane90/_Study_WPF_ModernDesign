<Window x:Class="_Study_WPF_ModernDesign.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:_Study_WPF_ModernDesign"
        xmlns:viewModel="clr-namespace:_Study_WPF_ModernDesign.MVM.ViewModel"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="920"
        WindowStyle="None"
        ResizeMode="NoResize"
        Background="Transparent"
        AllowsTransparency="True"
        StateChanged="OnWindowStateChanged">

    <Window.DataContext>
        <viewModel:MainViewModel/>
    </Window.DataContext>

    <Border Background="#272537"
            CornerRadius="20">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="35"/>
                <RowDefinition/>
            </Grid.RowDefinitions>


            <!--value of Span = length (o), index(x)-->
            <Border Grid.Column="1"
                    Grid.RowSpan="2"
                    Background="#373547"/>

            <ListBox Name="ListBoxTitle"
                     Grid.Row="0"
                     Grid.ColumnSpan="2"
                     Background="Transparent"
                     BorderBrush="#373547"
                     MouseDown="MainWindow_MouseLeftButtonDown"/>

            <StackPanel Grid.Column="1"
                Orientation="Horizontal"
                HorizontalAlignment="Right">
                <Button Name="BtnMinimalize"
                    Width="30"
                    Margin="5"
                    Click="OnClick_BtnMinimalize"
                    Background="#272537"
                    Content="-"
                    FontSize="20"
                    Foreground="White"/>
                <Button Name="BtnNormalize"
                    Width="30"
                    Margin="5"
                    Click="OnClick_BtnNormalize"
                    Background="#272537"
                    Content="▣"
                    VerticalContentAlignment="Center"
                    Foreground="White"/>
                <Button Name="BtnMaximize"
                    Width="30"
                    Margin="5"
                    Click="OnClick_BtnMaximize"
                    Background="#272537"
                    Content="□"
                    VerticalContentAlignment="Center"
                    Foreground="White"/>
                <Button Name="BtnClose"
                    Width="30"
                    Margin="5"
                    Click="OnClick_BtnClose"
                    Background="#272537"
                    Content="X"
                    Foreground="White"/>

                <!-- 개별 Style 설정하는 방법
                <RadioButton Content="HomeView" Command="{Binding HomeViewCommand}" IsChecked="True">
                -->
                <!-- 트리거는 RadioButton의 속성만 참조할 수 있다. ViewModel은 불가능하다-->
                <!--
                <RadioButton.Style>
                    <Style TargetType="RadioButton">
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="Orange"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </RadioButton.Style>
                </RadioButton>
                -->
            </StackPanel>

            <TextBlock Text="Elycian"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Left"
                   Foreground="White"
                   FontSize="22"
                   Margin="20,0,0,0"
                   FontFamily="/Font/Fonts.Google.com/Poppins-Regullar.ttf"/>

            <StackPanel Grid.Row="1">
                <!-- RadioButton은 같은 레이아웃 레벨에 형제 개체가 존재할 때다른 라디오버튼을 눌렀을 해제되는 것이 내부에 구현됐다.-->
                <RadioButton Content="Home"
                             Height="50"
                             Foreground="White"
                             FontSize="14"
                             Style="{StaticResource MenuButtonTheme}"
                             IsChecked="True"
                             Command="{Binding HomeViewCommand}"/>
                <!--Event대신 Command를 사용하는 이유는 Event는 UI의 상호작용 됐는지 상관없이 호출되므로-->
                <!--UI컨트롤이 살잻 생성되지 않은채로 null레퍼런스가 발생하기 때문이다. 즉, race condition발생.-->
                <!--커맨드는 UI의 상호작용 알림에 의해 동작하므로 Race Condition을 고려하지 않아도 된다.-->
                <RadioButton Content="Discovery"
                             Height="50"
                             Foreground="White"
                             FontSize="14"
                             Style="{StaticResource MenuButtonTheme}"
                             Command="{Binding DiscoveryViewCommand}"/>
                <RadioButton Content="Feature"
                             Height="50"
                             Foreground="White"
                             FontSize="14"
                             Style="{StaticResource MenuButtonTheme}"/>
            </StackPanel>

            <TextBox Width="250"
                       Height="40"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Left"
                       Margin="5"
                       Grid.Column="1"
                       Style="{StaticResource ModernTextbox}"/>

            <ContentControl Grid.Row="1"
                            Grid.Column="1"
                            Margin="10"
                            Content="{Binding CurrentView}"/>

            <Separator 
                VerticalAlignment="Bottom">
                <Separator.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF00001E" Offset="0"/>
                        <GradientStop Color="#00000000" Offset="1"/>
                    </LinearGradientBrush>
                </Separator.Background>
                <Separator.RenderTransform>
                    <ScaleTransform ScaleY="8"/>
                </Separator.RenderTransform>
            </Separator>

            <!--Sperator 대신 컨트롤의 BorderBrush와 BorderThickness 속성을 사용할 수 있다. "0,0,5,0"(Left, Top, Bottom, Right)-->
            <!--
            <Separator Grid.Column="1"
                VerticalAlignment="Bottom">
                <Separator.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF242442" Offset="0"/>
                        <GradientStop Color="#00000000" Offset="0.95"/>
                        <GradientStop Color="#83121222" Offset="0.324"/>
                    </LinearGradientBrush>
                </Separator.Background>
                <Separator.RenderTransform>
                    <ScaleTransform ScaleY="8"/>
                </Separator.RenderTransform>
            </Separator>
            -->


        </Grid>


    </Border>
</Window>
